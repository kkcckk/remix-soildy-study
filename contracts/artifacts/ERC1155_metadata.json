{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name_",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol_",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "ApprovalForAll",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					}
				],
				"name": "TransferBatch",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "TransferSingle",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "value",
						"type": "string"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "URI",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "accounts",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					}
				],
				"name": "balanceOfBatch",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					}
				],
				"name": "isApprovedForAll",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "ids",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "amounts",
						"type": "uint256[]"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeBatchTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "safeTransferFrom",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "approved",
						"type": "bool"
					}
				],
				"name": "setApprovalForAll",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "uri",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"ApprovalForAll(address,address,bool)": {
					"details": "批量授权事件 当`account`将所有代币授权给`operator`时释放"
				},
				"TransferBatch(address,address,address,uint256[],uint256[])": {
					"details": "多类代币转账事件 ids和values为转账的代币种类和数量数组"
				},
				"TransferSingle(address,address,address,uint256,uint256)": {
					"details": "单类代币转账事件 当`value`个`id`种类的代币被`operator`从`from`转账到`to`时释放."
				},
				"URI(string,uint256)": {
					"details": "当`id`种类的代币的URI发生变化时释放，`value`为新的URI"
				}
			},
			"kind": "dev",
			"methods": {
				"balanceOf(address,uint256)": {
					"details": "持仓查询，返回`account`拥有的`id`种类的代币的持仓量"
				},
				"balanceOfBatch(address[],uint256[])": {
					"details": "批量持仓查询，`accounts`和`ids`数组的长度要想等。"
				},
				"isApprovedForAll(address,address)": {
					"details": "批量授权查询，如果授权地址`operator`被`account`授权，则返回`true` 见 {setApprovalForAll}函数."
				},
				"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
					"details": "批量安全转账 释放{TransferBatch}事件 要求： - `ids`和`amounts`长度相等 - 如果接收方是合约，需要实现`IERC1155Receiver`的`onERC1155BatchReceived`方法，并返回相应的值"
				},
				"safeTransferFrom(address,address,uint256,uint256,bytes)": {
					"details": "安全转账，将`amount`单位`id`种类的代币从`from`转账给`to`. 释放{TransferSingle}事件. 要求: - 如果调用者不是`from`地址而是授权地址，则需要得到`from`的授权 - `from`地址必须有足够的持仓 - 如果接收方是合约，需要实现`IERC1155Receiver`的`onERC1155Received`方法，并返回相应的值"
				},
				"setApprovalForAll(address,bool)": {
					"details": "批量授权，将调用者的代币授权给`operator`地址。 释放{ApprovalForAll}事件."
				},
				"supportsInterface(bytes4)": {
					"details": "如果合约实现了查询的`interfaceId`，则返回true 规则详见：https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]"
				},
				"uri(uint256)": {
					"details": "返回第`id`种类代币的URI"
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "支持一个合约包含多种代币，包含了NFT和FT 区分NFT和FT，就看对应的代币总量是否是大于1，一般NFT的总量为1，FT的总量会大于1 在ERC1155中，会使用id来作为代币标识，id是唯一的，并且每一个代币都一个uri地址来存储以及管理元数据信息",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ERC1155.sol": "ERC1155"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ERC1155.sol": {
			"keccak256": "0x18725d75dda79bff3bf5220bfdbf5b6001124d79782bd46ed58b683d3a82cf26",
			"license": "MIT",
			"urls": [
				"bzz-raw://a544de5e02d25ee596a6ae378189659e90527038cb4ef7c8dc308c8d637a2507",
				"dweb:/ipfs/Qme4ixkN9Uwu6m2xczThR7geAZ2XDBmJZiX4HqWRxisBtZ"
			]
		},
		"contracts/interface/IERC1155.sol": {
			"keccak256": "0xb565bfd2f481081b98265c583738a2570039bda4ee1ae56baceb5ebcadf92429",
			"license": "MIT",
			"urls": [
				"bzz-raw://28baa483e079e98210352b731d3b2276e03cef34dd5745d1edf3093430c4b0fb",
				"dweb:/ipfs/QmTUEEKpkrFcv7jLeUR2EGDh4VkGDQUdazFrAqbTeB5NNn"
			]
		},
		"contracts/interface/IERC1155MetadataURI.sol": {
			"keccak256": "0x3fd4ab42c5225ceb6e62bed0173e5e5352db762020a1ac5392fb987db54aa5f2",
			"license": "MIT",
			"urls": [
				"bzz-raw://57b8e7e464b47932b0c6da5592e7a4aaf9537c654f450cff72ebe49ec0ed3371",
				"dweb:/ipfs/QmRFk21dXJ8skJCDNGg1hHMSS6zMuFSRJSaBuGGq8J2zKx"
			]
		},
		"contracts/interface/IERC1155Receiver.sol": {
			"keccak256": "0x3db4b22c75fbf2114ebef594fc0a306ba476b2d6fcb1bf0713e5faf11af332af",
			"license": "MIT",
			"urls": [
				"bzz-raw://035e870c34202481f79a46e1b34c505146e059ddfdac2a3be88f8183a3b1ceb4",
				"dweb:/ipfs/QmNxQhs8srM6e2iqwu1SmHJBNb28551yzC4De6uC1e5sEY"
			]
		},
		"contracts/interface/IERC165.sol": {
			"keccak256": "0x9a8f9c7be8955609b5252161f118bc8a4640bb8ee82e287e6486e5ca21bf1ab5",
			"license": "MIT",
			"urls": [
				"bzz-raw://2587358108ce107c79ad10f7b3f6172713087a5656197a4390dc1a594cb337de",
				"dweb:/ipfs/QmRDAFxyyFVXnCMmL7Dx31fEYtrJvuhdZuSytPSTMofrAm"
			]
		},
		"contracts/library/Address.sol": {
			"keccak256": "0xba7940cdf35ed5c113ede7ad2bf97b63c61a88e524b0c75898e6aa8dec9dcdd3",
			"license": "MIT",
			"urls": [
				"bzz-raw://e319e7463d125a9651f8dbe7e272a6ca763c6753399c32558712e6d23365bbb3",
				"dweb:/ipfs/QmXQy6Jjw2e3tckH6AuyHkgspSkXPYCvWCn9ZRdaKKh3VJ"
			]
		},
		"contracts/library/String.sol": {
			"keccak256": "0x35879cd15c16fb1e05bdf649d3768db9b2a32aa99aa9d22172a9550a63946f64",
			"license": "MIT",
			"urls": [
				"bzz-raw://a239a5a36d6a5beb4c049f16061c3577b02cca9b90893c863629315f731fd61c",
				"dweb:/ipfs/QmWi1okMLtNhrCC798UGdehZFrekr16iYu4gWPfL8iDCAJ"
			]
		}
	},
	"version": 1
}