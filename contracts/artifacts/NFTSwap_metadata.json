{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "List",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "content",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "Log",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "buyer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "Purchase",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "Revoke",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "seller",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "nftAddr",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newPric",
						"type": "uint256"
					}
				],
				"name": "Update",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "list",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "nftList",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "onERC721Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "purchase",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "revoke",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_nft",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "update",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"notice": "NFT交易所，因为要接收NFT，所以必须实现IERC721Receiver接口，流程： 卖家先在交易所上架NFT， 上架成功之后，卖家可以更改NFT的价格，也可以下架NFT 买家在卖家上架NFT之后，可以使用eth购买NFT ============== 1. 卖家在交易所上架NFT 需要提供NFT的地址，tokenId，上架的价格，价格必须上架为大于0才合理 但是有个前提，对应的tokenId应该授权给NFT交易所处理了， 之后卖家将NFT转移给NFT交易所，也就是进行transfer 2. 卖家在交易所下架NFT 需要提供NFT的地址，tokenId，通过这两个键获取Order结构体，同时获取tokenId的卖家地址， 之后通过NFT交易所将NFT交易回去卖家，并删除对应映射中的订单 3. 更新NFT的价格 根据提供的NFT地址以及tokenId，找到对应的Order结构体，然后更新一下对应price字段的值 4. 交易 传入NFT地址，以及tokenId， 然后比较买家(msg.sender)价格(msg.value)和NFT的价格，如果大于等于NFT的价格，交易成交， 通过safeTransferFrom函数将NFT转入买家地址， 通过NFT地址以及tokenId找出Order结构体，获取price，转入price给卖家， 同时，如果有多余的钱，那么会将多余的钱转会买家    ",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/NFTSwap.sol": "NFTSwap"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/ERC721.sol": {
			"keccak256": "0x27a330cbc3fa02705b119c547fac80d911259531df8d1495c46af063410b90de",
			"license": "MIT",
			"urls": [
				"bzz-raw://e9701a0479c1a79c074a95e71460dc9eee7729f8328e814b8160af63c6d9c2f0",
				"dweb:/ipfs/QmfYTeYf8fNxhKzRWPNTRRUXgWGrRSQF1fshwwidhgRhaq"
			]
		},
		"contracts/KXERC721.sol": {
			"keccak256": "0xc4f56222fabb9aaf604a7103c65c867d4c30e46ce710a9e97141174c854d57f7",
			"license": "MIT",
			"urls": [
				"bzz-raw://43f8809acf46e8bb7639ea6e05b9dfdfb1d0eb001372244a593520a48afdec52",
				"dweb:/ipfs/QmSkaapTgrSUysqfPVcW8i2Nx5d6St8njuzxxcBznTYACc"
			]
		},
		"contracts/NFTSwap.sol": {
			"keccak256": "0xf25df287be18c22e1713a3b5231c108a19ba8e909a72283100e559f1fba394b3",
			"license": "MIT",
			"urls": [
				"bzz-raw://895e50a82318fc3b8263ca471c59a5d430b9de366539453b427f959bcb349dac",
				"dweb:/ipfs/Qmcx1bRQhdN4v7WqqjXxX2Jyc1NZtQCLezqW42fmDdhRPr"
			]
		},
		"contracts/interface/IERC165.sol": {
			"keccak256": "0x9a8f9c7be8955609b5252161f118bc8a4640bb8ee82e287e6486e5ca21bf1ab5",
			"license": "MIT",
			"urls": [
				"bzz-raw://2587358108ce107c79ad10f7b3f6172713087a5656197a4390dc1a594cb337de",
				"dweb:/ipfs/QmRDAFxyyFVXnCMmL7Dx31fEYtrJvuhdZuSytPSTMofrAm"
			]
		},
		"contracts/interface/IERC721.sol": {
			"keccak256": "0x527118e4caab49b1fb83be7494f9db012e8233b3673938a3aadc8eefdc133e9b",
			"license": "MIT",
			"urls": [
				"bzz-raw://2ed996288dfeb028ea9c68a3ac518f6757ed1b019f7e4ae8f592112bd0d3a08a",
				"dweb:/ipfs/QmTT6xBg2uY3rtLcPhoszrJ4Nx9qAwvomQ92qYVjwis8nE"
			]
		},
		"contracts/interface/IERC721Metadata.sol": {
			"keccak256": "0x098c0358661d09857ba84b64b96dad61565c225a66279ab562f4e02f6cae9594",
			"license": "MIT",
			"urls": [
				"bzz-raw://ffc289433c97eff7f28cc2f6e4efd5968a45310655da9228876562425cca7603",
				"dweb:/ipfs/QmRLsCHbr2Teyu8uoVo2uvEU8SucYv5saNbYeMTFvbrpn4"
			]
		},
		"contracts/interface/IERC721Receiver.sol": {
			"keccak256": "0x00c9b4ed4bffa5c5b88f1d4c89f2bec0d3032c85018c4a76184f50983f60d58e",
			"license": "MIT",
			"urls": [
				"bzz-raw://b4a6160635d5c7fbe3e69d748bf91e5243ebc9772be37e4bf828dd4ca18b2cc7",
				"dweb:/ipfs/QmfMhjmHsAznHnCVULKmEFv6wgw5dEdXUDz5j6nxz4nYhY"
			]
		},
		"contracts/library/String.sol": {
			"keccak256": "0x35879cd15c16fb1e05bdf649d3768db9b2a32aa99aa9d22172a9550a63946f64",
			"license": "MIT",
			"urls": [
				"bzz-raw://a239a5a36d6a5beb4c049f16061c3577b02cca9b90893c863629315f731fd61c",
				"dweb:/ipfs/QmWi1okMLtNhrCC798UGdehZFrekr16iYu4gWPfL8iDCAJ"
			]
		}
	},
	"version": 1
}